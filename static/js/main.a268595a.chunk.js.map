{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","text","setText","className","id","rows","cols","placeholder","value","onChange","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAmDeA,MAvBf,WACE,MAAwBC,mBAzBZ,qVAyBZ,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,wCACA,0BACEC,GAAG,SACHC,KAAK,KACLC,KAAK,MACLC,YAAY,gBACZC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAWR,EAAQQ,EAAMC,OAAOH,UAE5C,2CACA,qBAAKJ,GAAG,UAAR,SACE,cAAC,IAAD,UAAgBH,UChCTW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a268595a.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport \"./App.css\";\n\nconst markDown = `\n# Hello World \n\n## Hello World \n\n**I am here** \n\n[title](https://www.https://css-exercise-1.vercel.app/)\n\n\\`\\`\\`\nconst a = 10\nconst b = 11\n\\`\\`\\`\n\n\\`const c = 12 \\`\n\n- First item\n- Second item\n- Third item\n\n> This Is A Block Quote\n\n![alt text](https://pbs.twimg.com/profile_images/1362371062634319873/jjm5Fs4J_400x400.jpg)`;\n\nfunction App() {\n  const [text, setText] = useState(markDown);\n\n  return (\n    <div className=\"App\">\n      <h2>Editor</h2>\n      <textarea\n        id=\"editor\"\n        rows=\"12\"\n        cols=\"100\"\n        placeholder=\"Add text here\"\n        value={text}\n        onChange={(event) => setText(event.target.value)} // setText updater is attached to the onChange event handler, which passes the value of the input via event.target.value to the string defined by the value text //\n      ></textarea>\n      <h2>Previewer</h2>\n      <div id=\"preview\">\n        <ReactMarkdown>{text}</ReactMarkdown>\n        {/* Converts the string defined by the value text to Markdown using react-markdown package */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}